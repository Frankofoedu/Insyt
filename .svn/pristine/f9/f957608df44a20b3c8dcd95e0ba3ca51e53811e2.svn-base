using SentimentAnalysis.DAL;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Newtonsoft.Json;
using System.Runtime;

// REST API
using Tweetinvi;
using Tweetinvi.Core.Events;
using Tweetinvi.Models;
using Tweetinvi.Parameters;

// STREAM API
using Tweetinvi.Streaming;
using Stream = Tweetinvi.Stream;

// Others
using Tweetinvi.Exceptions; // Handle Exceptions
using Tweetinvi.Core.Extensions;
using Tweetinvi.Core.Public.Parameters;
// Extension methods provided by Tweetinvi
using Tweetinvi.Models.DTO; // Data Transfer Objects for Serialization
using Tweetinvi.Json;
using Tweet = Tweetinvi.Logic.Tweet;
using System.Threading;

// JSON static classes to get json from Twitter.

namespace SentimentAnalysis
{
    public partial class Form1 : Bunifu.Framework.UI.BunifuForm
    {
        private IAuthenticatedUser _authenticatedUser;
        private const string ConsumerKey = "AHaR1PW1TeoebTEEWueZp7A5N";
        private const string ConsumerSecret = "idenId4i5d45Uio8Icro6mX9SiuoTxTUID5VEf6A8PkPirJKtG";
        private const string UserAccessToken = "1076291598-sPjUUo8JlhuYOrqCYgAKOurtyXdY1bk9OF4X1cV";
        private const string UserAccessSecret = "YsMDRtdHncfKj4eZnBD4qZ27o2ZoanyAbZL2PRht3YzX9";

        private readonly SynchronizationContext synchronizationContext;

        public Form1()
        {
            InitializeComponent();
            synchronizationContext = SynchronizationContext.Current;
        }

        private void label2_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void label3_Click(object sender, EventArgs e)
        {
            ActiveForm?.Hide();
        }


        private void btnLogin_Click(object sender, EventArgs e)
        {
            using (var db = new SentimentContext())
            {

                var user = db.Employees.FirstOrDefault(x => x.Email == txtUsername.Text && x.Password == txtPassword.Text);

                if (user != null)
                {
                    MessageBox.Show(@"yes");
                    bunifuTransition1.HideSync(transparentPanel1);

                }
                else
                {
                    MessageBox.Show(@"Please sign in with correct details");
                }
            }
        }

        private async void btnTwitterLogin_Click(object sender, EventArgs e)
        {
                progressBar1.Visible = true;
                pictureBox1.Visible = true;

            await Task.Run(() =>
            {
                try
                {
                    
                    Auth.SetUserCredentials(ConsumerKey, ConsumerSecret, UserAccessToken, UserAccessSecret);


                    _authenticatedUser = User.GetAuthenticatedUser();

                    if (_authenticatedUser == null)
                    {
                        var latestexception = ExceptionHandler.GetLastException();
                        MessageBox.Show(latestexception.TwitterDescription);
                    }
                    else
                    {
                        MessageBox.Show(_authenticatedUser.Email);



                        //disable btn on login
                        btnLogin.Enabled = _authenticatedUser != null;

                    }
                }
                catch (ArgumentException ex)
                {

                    MessageBox.Show("Request parameters are invalid: '{0}'", ex.Message);
                }
                catch (TwitterException ex)
                {

                    MessageBox.Show("Something went wrong when we tried to execute the http request : '{0}'", ex.TwitterDescription);
                }
            });

            progressBar1.Visible = false;
            pictureBox1.Visible = false;

        }

        private void btnGetTweets_Click(object sender, EventArgs e)
        {
            GetAllTweets();

        }

        private void GetAllTweets()
        {
            //try
            //{
            if (!txtSearchTwitter.Text.IsNullOrEmpty())
            {

                ISearchTweetsParameters sp = new SearchTweetsParameters(new Coordinates(23, 76), 45, DistanceMeasure.Kilometers);
                sp.SearchQuery = txtSearchTwitter.Text;
                sp.FilterTweetsNotContainingGeoInformation = true;



                var tweets = Search.SearchTweets(sp);

                foreach (var tweet in tweets)
                {
                    var t = new DAL.Tweet()
                    {
                        TweetId = tweet.Id.ToString(),
                        TweetContent = tweet.Text,
                        TweetCreatedDate = tweet.TweetLocalCreationDate.ToString(CultureInfo.InvariantCulture),
                        TweetOwnerName = tweet.CreatedBy.ScreenName
                    };

                    Serialize(t);
                }
            }
            //}
            //catch (Exception e)
            //{
            //    MessageBox.Show(e.ToString());
            //}
        }

        private static void Serialize(DAL.Tweet tweet)
        {
            using (var writer = File.CreateText(@".\tweets.json"))
            {
                var jsonString = JsonConvert.SerializeObject(tweet, Formatting.Indented);

                writer.Write(jsonString);

            }

        }

        private void btnLogin_Click_1(object sender, EventArgs e)
        {

        }


    }
}
